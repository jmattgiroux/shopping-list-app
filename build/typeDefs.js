var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
(function () {
    var gql = require('apollo-server').gql;
    var typeDefs = gql(__makeTemplateObject(["\n\n    # User Related Definitions\n    type User {\n        id: String\n        email: String\n        password: String\n        createdAt: String\n    }\n\n    input UserInput {\n        email: String!\n        password: String!\n    }\n\n    input UserId {\n        id: String!\n    }\n\n    # Ingredient related definitions\n\n    type Ingredient {\n        id: String\n        name: String\n        createdAt: String\n    }\n\n    input IngredientInput {\n        name: String!\n    }\n\n    input IngredientId {\n        id: String!\n    }\n\n    # Category related definitions\n\n    type Category {\n        id: String\n        name: String\n        ingredientList: [String]\n        createdAt: String\n    }\n\n    input CategoryInput {\n        name: String!\n        ingredientList: [String]\n    }\n\n    input CategoryId {\n        id: String!\n    }\n\n    type Query {\n        # user queries\n        users: [User]\n        user(UserId: UserId): User!\n\n        # ingredient queries\n        ingredients: [Ingredient]\n        ingredient(IngredientId: IngredientId): Ingredient!\n\n        # category queries\n        categories: [Category]\n        category(CategoryId: CategoryId): Category!\n    }\n\n    type Mutation {\n        # user mutations\n        createUser(UserInput: UserInput): User!\n        deleteUser(UserId: UserId): User!\n        updateUser(UserInput: UserInput, UserId: UserId): User!\n\n        # ingredient mutations\n        createIngredient(IngredientInput: IngredientInput): Ingredient!\n        deleteIngredient(IngredientId: IngredientId): Ingredient!\n        updateIngredient(IngredientInput: IngredientInput, IngredientId: IngredientId): Ingredient!\n\n        # category mutations\n        createCategory(CategoryInput: CategoryInput): Category!\n        deleteCategory(CategoryId: CategoryId): Category!\n        updateCategory(CategoryInput: CategoryInput, CategoryId: CategoryId): Category!\n    }\n"], ["\n\n    # User Related Definitions\n    type User {\n        id: String\n        email: String\n        password: String\n        createdAt: String\n    }\n\n    input UserInput {\n        email: String!\n        password: String!\n    }\n\n    input UserId {\n        id: String!\n    }\n\n    # Ingredient related definitions\n\n    type Ingredient {\n        id: String\n        name: String\n        createdAt: String\n    }\n\n    input IngredientInput {\n        name: String!\n    }\n\n    input IngredientId {\n        id: String!\n    }\n\n    # Category related definitions\n\n    type Category {\n        id: String\n        name: String\n        ingredientList: [String]\n        createdAt: String\n    }\n\n    input CategoryInput {\n        name: String!\n        ingredientList: [String]\n    }\n\n    input CategoryId {\n        id: String!\n    }\n\n    type Query {\n        # user queries\n        users: [User]\n        user(UserId: UserId): User!\n\n        # ingredient queries\n        ingredients: [Ingredient]\n        ingredient(IngredientId: IngredientId): Ingredient!\n\n        # category queries\n        categories: [Category]\n        category(CategoryId: CategoryId): Category!\n    }\n\n    type Mutation {\n        # user mutations\n        createUser(UserInput: UserInput): User!\n        deleteUser(UserId: UserId): User!\n        updateUser(UserInput: UserInput, UserId: UserId): User!\n\n        # ingredient mutations\n        createIngredient(IngredientInput: IngredientInput): Ingredient!\n        deleteIngredient(IngredientId: IngredientId): Ingredient!\n        updateIngredient(IngredientInput: IngredientInput, IngredientId: IngredientId): Ingredient!\n\n        # category mutations\n        createCategory(CategoryInput: CategoryInput): Category!\n        deleteCategory(CategoryId: CategoryId): Category!\n        updateCategory(CategoryInput: CategoryInput, CategoryId: CategoryId): Category!\n    }\n"]));
    module.exports = typeDefs;
})();
